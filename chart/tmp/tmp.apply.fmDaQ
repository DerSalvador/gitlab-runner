apiVersion: v1
data:
  check-live: |
    #!/bin/bash
    if /usr/bin/pgrep -f .*register-the-runner; then
      exit 0
    elif /usr/bin/pgrep gitlab.*runner; then
      exit 0
    else
      exit 1
    fi
  config.toml: |
    concurrent = 10
    check_interval = 30
    log_level = "info"
    listen_address = '[::]:9252'
  configure: |
    set -e
    cp /init-secrets/* /secrets
  entrypoint: |
    #!/bin/bash
    set -e
    mkdir -p /home/gitlab-runner/.gitlab-runner/
    cp /scripts/config.toml /home/gitlab-runner/.gitlab-runner/

    # Register the runner
    if [[ -f /secrets/accesskey && -f /secrets/secretkey ]]; then
      export CACHE_S3_ACCESS_KEY=$(cat /secrets/accesskey)
      export CACHE_S3_SECRET_KEY=$(cat /secrets/secretkey)
    fi

    if [[ -f /secrets/gcs-applicaton-credentials-file ]]; then
      export GOOGLE_APPLICATION_CREDENTIALS="/secrets/gcs-applicaton-credentials-file"
    else
      if [[ -f /secrets/gcs-access-id && -f /secrets/gcs-private-key ]]; then
        export CACHE_GCS_ACCESS_ID=$(cat /secrets/gcs-access-id)
        # echo -e used to make private key multiline (in google json auth key private key is oneline with \n)
        export CACHE_GCS_PRIVATE_KEY=$(echo -e $(cat /secrets/gcs-private-key))
      fi
    fi

    if [[ -f /secrets/runner-registration-token ]]; then
      export REGISTRATION_TOKEN=$(cat /secrets/runner-registration-token)
    fi

    if [[ -f /secrets/runner-token ]]; then
      export CI_SERVER_TOKEN=$(cat /secrets/runner-token)
    fi

    if ! sh /scripts/register-the-runner; then
      exit 1
    fi

    # Start the runner
    /entrypoint run --user=gitlab-runner \
      --working-directory=/home/gitlab-runner
  register-the-runner: "#!/bin/bash\nMAX_REGISTER_ATTEMPTS=30\n\nfor i in $(seq 1
    \"${MAX_REGISTER_ATTEMPTS}\"); do\n  echo \"Registration attempt ${i} of ${MAX_REGISTER_ATTEMPTS}\"\n
    \ /entrypoint register \\\n    --non-interactive\n\n  retval=$?\n\n  if [ ${retval}
    = 0 ]; then\n    break\n  elif [ ${i} = ${MAX_REGISTER_ATTEMPTS} ]; then\n    exit
    1\n  fi\n\n  sleep 5 \ndone\n\nexit 0\n"
kind: ConfigMap
metadata:
  labels:
    app: gitlab-runner-gitlab-runner
    chart: gitlab-runner-0.7.0
    heritage: Tiller
    release: gitlab-runner
  name: gitlab-runner-gitlab-runner
---
apiVersion: v1
data:
  runner-registration-token: Rk5vVHMzOHkwNDRoVFNERFpZQ20za3dQZGI5SGNtRFJ1WU1LUERLSDhzNlk2clZEcURIR0RwakxzS29IZmJoeg==
  runner-token: ""
kind: Secret
metadata:
  labels:
    app: gitlab-runner-gitlab-runner
    chart: gitlab-runner-0.7.0
    heritage: Tiller
    release: gitlab-runner
  name: gitlab-runner-gitlab-runner
type: Opaque
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    app: gitlab-runner-gitlab-runner
    chart: gitlab-runner-0.7.0
    heritage: Tiller
    release: gitlab-runner
  name: gitlab-runner-gitlab-runner
spec:
  replicas: 1
  template:
    metadata:
      annotations:
        checksum/configmap: c0a2bc3dca47b5a3a4f6177d06f7b70757d26f81b11aa5f4f7aa969623679c46
        checksum/secrets: 8fd20bd22f60652487b130cc6ca446d7bca594a9f077cee3fb90358fe53176e5
        prometheus.io/port: "9252"
        prometheus.io/scrape: "true"
      labels:
        app: gitlab-runner-gitlab-runner
    spec:
      containers:
      - command:
        - /bin/bash
        - /scripts/entrypoint
        env:
        - name: CI_SERVER_URL
          value: https://gitlab.192.168.64.231.nip.io/
        - name: CLONE_URL
          value: ""
        - name: RUNNER_REQUEST_CONCURRENCY
          value: "1"
        - name: RUNNER_EXECUTOR
          value: kubernetes
        - name: REGISTER_LOCKED
          value: "true"
        - name: RUNNER_TAG_LIST
          value: ""
        - name: KUBERNETES_IMAGE
          value: ubuntu:16.04
        - name: KUBERNETES_PRIVILEGED
          value: "true"
        - name: KUBERNETES_NAMESPACE
          value: gitlab-runner
        - name: KUBERNETES_CPU_LIMIT
          value: ""
        - name: KUBERNETES_MEMORY_LIMIT
          value: ""
        - name: KUBERNETES_CPU_REQUEST
          value: ""
        - name: KUBERNETES_MEMORY_REQUEST
          value: ""
        - name: KUBERNETES_SERVICE_ACCOUNT
          value: ""
        - name: KUBERNETES_SERVICE_CPU_LIMIT
          value: ""
        - name: KUBERNETES_SERVICE_MEMORY_LIMIT
          value: ""
        - name: KUBERNETES_SERVICE_CPU_REQUEST
          value: ""
        - name: KUBERNETES_SERVICE_MEMORY_REQUEST
          value: ""
        - name: KUBERNETES_HELPER_CPU_LIMIT
          value: ""
        - name: KUBERNETES_HELPER_MEMORY_LIMIT
          value: ""
        - name: KUBERNETES_HELPER_CPU_REQUEST
          value: ""
        - name: KUBERNETES_HELPER_MEMORY_REQUEST
          value: ""
        - name: KUBERNETES_HELPER_IMAGE
          value: ""
        - name: KUBERNETES_PULL_POLICY
          value: ""
        image: gitlab/gitlab-runner:alpine-v12.1.0
        imagePullPolicy: IfNotPresent
        lifecycle:
          preStop:
            exec:
              command:
              - gitlab-runner
              - unregister
              - --all-runners
        livenessProbe:
          exec:
            command:
            - /bin/bash
            - /scripts/check-live
          failureThreshold: 3
          initialDelaySeconds: 60
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: gitlab-runner-gitlab-runner
        ports:
        - containerPort: 9252
          name: metrics
        readinessProbe:
          exec:
            command:
            - /usr/bin/pgrep
            - gitlab.*runner
          failureThreshold: 3
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources: {}
        volumeMounts:
        - mountPath: /secrets
          name: runner-secrets
        - mountPath: /home/gitlab-runner/.gitlab-runner
          name: etc-gitlab-runner
        - mountPath: /scripts
          name: scripts
        - mountPath: /home/gitlab-runner/.gitlab-runner/certs/
          name: custom-certs
          readOnly: true
        - mountPath: /dotnet-repo
          name: dotnet-pro
          readOnly: false
      hostAliases:
      - hostnames:
        - qahcembrace.grouphc.net
        ip: 10.70.74.26
      - hostnames:
        - hcembrace.grouphc.net
        ip: 10.75.47.249
      - hostnames:
        - identityprovider.grouphc.net
        ip: 10.75.49.102
      - hostnames:
        - qaidentityprovider.grouphc.net
        ip: 10.77.47.175
      - hostnames:
        - ausxdsgdrngq1.grouphc.net
        ip: 10.149.114.92
      - hostnames:
        - grpsapdz1.grouphc.net
        ip: 10.77.100.228
      initContainers:
      - command:
        - sh
        - /config/configure
        env:
        - name: CI_SERVER_URL
          value: https://gitlab.192.168.64.231.nip.io/
        - name: CLONE_URL
          value: ""
        - name: RUNNER_REQUEST_CONCURRENCY
          value: "1"
        - name: RUNNER_EXECUTOR
          value: kubernetes
        - name: REGISTER_LOCKED
          value: "true"
        - name: RUNNER_TAG_LIST
          value: ""
        - name: KUBERNETES_IMAGE
          value: ubuntu:16.04
        - name: KUBERNETES_PRIVILEGED
          value: "true"
        - name: KUBERNETES_NAMESPACE
          value: gitlab-runner
        - name: KUBERNETES_CPU_LIMIT
          value: ""
        - name: KUBERNETES_MEMORY_LIMIT
          value: ""
        - name: KUBERNETES_CPU_REQUEST
          value: ""
        - name: KUBERNETES_MEMORY_REQUEST
          value: ""
        - name: KUBERNETES_SERVICE_ACCOUNT
          value: ""
        - name: KUBERNETES_SERVICE_CPU_LIMIT
          value: ""
        - name: KUBERNETES_SERVICE_MEMORY_LIMIT
          value: ""
        - name: KUBERNETES_SERVICE_CPU_REQUEST
          value: ""
        - name: KUBERNETES_SERVICE_MEMORY_REQUEST
          value: ""
        - name: KUBERNETES_HELPER_CPU_LIMIT
          value: ""
        - name: KUBERNETES_HELPER_MEMORY_LIMIT
          value: ""
        - name: KUBERNETES_HELPER_CPU_REQUEST
          value: ""
        - name: KUBERNETES_HELPER_MEMORY_REQUEST
          value: ""
        - name: KUBERNETES_HELPER_IMAGE
          value: ""
        - name: KUBERNETES_PULL_POLICY
          value: ""
        image: gitlab/gitlab-runner:alpine-v12.1.0
        name: configure
        resources: {}
        volumeMounts:
        - mountPath: /secrets
          name: runner-secrets
          readOnly: false
        - mountPath: /config
          name: scripts
          readOnly: true
        - mountPath: /init-secrets
          name: init-runner-secrets
          readOnly: true
      securityContext:
        fsGroup: 65533
        runAsUser: 100
      serviceAccountName: ""
      volumes:
      - emptyDir:
          medium: Memory
        name: runner-secrets
      - emptyDir:
          medium: Memory
        name: etc-gitlab-runner
      - name: init-runner-secrets
        projected:
          sources:
          - secret:
              items:
              - key: runner-registration-token
                path: runner-registration-token
              - key: runner-token
                path: runner-token
              name: gitlab-runner-gitlab-runner
      - name: custom-certs
        secret:
          secretName: gitlab-runner-cert
      - configMap:
          name: gitlab-runner-gitlab-runner
        name: scripts
      - name: dotnet-pro
        persistentVolumeClaim:
          claimName: dotnet-repo
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: dotnet-repo
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 1000M
  storageClassName: standard
  volumeMode: Filesystem
